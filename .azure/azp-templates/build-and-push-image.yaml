parameters:
  contextDir: '<required>'
  dockerFile: '<required>'
  imageName: '<required>'
  imageVersion: '<required>'
  pushDockerHub: false
  dockerHubConnection: '<required if pushDockerHub>'
  dockerHubUsername: '<required if pushDockerHub>'
  pushACR: false

stages:
- stage: Build_and_Push
  displayName: Build and Push Docker image
  jobs:
  - job: Build_and_Push
    displayName: Build and Push Docker image
    steps:
    - template: '_task_install_docker_cli.yaml'
    - template: '_task_build_docker_image.yaml'
      parameters:
        contextDir: '${{ parameters.contextDir }}'
        dockerFile: '${{ parameters.dockerFile }}'
        imageName: '${{ parameters.imageName }}'
        imageVersion: '${{ parameters.imageVersion }}'
        ${{ if eq(parameters.pushDockerHub, true) }}:
          containerRegistry: '${{ parameters.dockerHubConnection }}'
    - task: Docker@2
      displayName: List images
      inputs:
        command: images
    - ${{ if eq(parameters.pushDockerHub, true) }}:
      - template: '_task_push_to_dockerhub.yaml'
        parameters:
          dockerHubConnection: '${{ parameters.dockerHubConnection }}'
          # repository: '${{ parameters.dockerHubUsername }}/${{ parameters.imageName }}'
          repository: '${{ parameters.imageName }}'
          imageVersion: '${{ parameters.imageVersion }}'
